basePath: /api/v1
definitions:
  controllers.BangumiResponse:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
      total:
        type: integer
    type: object
  controllers.CarouselOrderRequest:
    description: 更新轮播图顺序的请求参数
    properties:
      id:
        description: '@Description 轮播图ID'
        type: integer
      order:
        description: '@Description 轮播图顺序'
        type: integer
    required:
    - id
    - order
    type: object
  controllers.EpisodeInfo:
    properties:
      episode:
        type: number
      release_date:
        type: string
      url:
        type: string
    type: object
  controllers.ErrorResponse:
    description: 错误响应
    properties:
      error:
        description: '@Description 错误信息'
        type: string
    type: object
  controllers.GlobalSettingsResponse:
    properties:
      created_at:
        example: "2024-05-20T12:00:00Z"
        type: string
      exclude_keywords:
        example: 预告,PV
        type: string
      global_keywords:
        example: 动画,动漫
        type: string
      id:
        example: 1
        type: integer
      sub_group_blacklist:
        example: 字幕组1,字幕组2
        type: string
      updated_at:
        example: "2024-05-20T12:00:00Z"
        type: string
    type: object
  controllers.GlobalSettingsUpdateRequest:
    properties:
      exclude_keywords:
        example: 预告,PV
        type: string
      global_keywords:
        example: 动画,动漫
        type: string
      sub_group_blacklist:
        example: 字幕组1,字幕组2
        type: string
    type: object
  controllers.GroupedByResolutionAndSub:
    properties:
      group_name:
        type: string
      resolutions:
        items:
          $ref: '#/definitions/controllers.ResolutionGroupedSubs'
        type: array
    type: object
  controllers.HistoryRequest:
    properties:
      url:
        example: https://mikanime.tv/Download/20120812/6cfa68ddda6972015edbc4a505357ed4d2275f77.torrent
        type: string
    required:
    - url
    type: object
  controllers.LogResponse:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: user123
        type: string
    required:
    - password
    - username
    type: object
  controllers.LoginResponse:
    properties:
      message:
        example: 登录成功
        type: string
      role:
        example: regular
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  controllers.RSSResponse:
    description: RSS订阅源响应结构
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
  controllers.ResolutionGroupedSubs:
    properties:
      resolution_name:
        type: string
      sub_groups:
        items:
          $ref: '#/definitions/controllers.SubGroupedEpisodes'
        type: array
    type: object
  controllers.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
  controllers.SubGroupedEpisodes:
    properties:
      episodes:
        items:
          $ref: '#/definitions/controllers.EpisodeInfo'
        type: array
      sub_type:
        type: string
    type: object
  controllers.SuccessResponse:
    description: 成功响应
    properties:
      message:
        description: '@Description 成功信息'
        type: string
    type: object
  controllers.SystemStatsResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  controllers.UpdatePasswordRequest:
    properties:
      new_password:
        example: newpass123
        type: string
      old_password:
        example: oldpass123
        type: string
    required:
    - new_password
    - old_password
    type: object
  models.Activity:
    description: 系统活动记录
    properties:
      content:
        example: 新用户 "AnimeUser" 注册成功
        type: string
      created_at:
        example: "2024-01-20T15:04:05Z"
        type: string
      id:
        example: 1
        type: integer
      type:
        example: user
        type: string
    type: object
  models.BangumiRatingRequest:
    properties:
      comment:
        type: string
      score:
        maximum: 10
        minimum: 0
        type: number
    required:
    - score
    type: object
  models.BangumiRatingResponse:
    properties:
      bangumi_id:
        type: integer
      comment:
        type: string
      created_at:
        type: string
      id:
        type: integer
      score:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.BangumiUpdateRequest:
    properties:
      official_title:
        type: string
      poster_link:
        type: string
      season:
        type: integer
      year:
        type: string
    type: object
  models.CarouselResponse:
    description: 轮播图响应数据
    properties:
      created_at:
        description: '@Description 创建时间'
        type: string
      description:
        description: '@Description 轮播图详细描述'
        type: string
      end_date:
        description: '@Description 轮播图结束显示时间'
        type: string
      id:
        description: '@Description 轮播图ID'
        type: integer
      image_url:
        description: '@Description 轮播图图片URL'
        type: string
      is_active:
        description: '@Description 轮播图是否激活'
        type: boolean
      link:
        description: '@Description 轮播图点击跳转链接'
        type: string
      order:
        description: '@Description 轮播图显示顺序'
        type: integer
      start_date:
        description: '@Description 轮播图开始显示时间'
        type: string
      subtitle:
        description: '@Description 轮播图副标题'
        type: string
      title:
        description: '@Description 轮播图标题'
        type: string
      updated_at:
        description: '@Description 更新时间'
        type: string
    type: object
  models.RSSFeedRequest:
    properties:
      exclude_keywords:
        example: 预告,PV
        type: string
      keywords:
        example: 莉可丽丝,友谊是时间的窃贼
        type: string
      name:
        example: 莉可丽丝
        type: string
      page_end:
        example: 5
        type: integer
      page_start:
        example: 1
        type: integer
      parser_type:
        example: mikanani
        type: string
      priority:
        example: 0
        type: integer
      update_interval:
        example: 1
        type: integer
      url:
        example: https://mikanani.me/RSS/Bangumi?bangumiId=3644
        type: string
    required:
    - name
    - parser_type
    - update_interval
    - url
    type: object
  models.RSSFeedResponse:
    properties:
      created_at:
        type: string
      exclude_keywords:
        type: string
      id:
        type: integer
      keywords:
        type: string
      name:
        type: string
      page_end:
        type: integer
      page_start:
        type: integer
      parser_type:
        type: string
      priority:
        type: integer
      update_interval:
        type: integer
      updated_at:
        type: string
      url:
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 这是一个动画网站的后端API服务
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: 动画网站 API
  version: 1.2.0
paths:
  /activities:
    get:
      consumes:
      - application/json
      description: 获取系统中最近的活动记录，包括用户操作、RSS更新等
      parameters:
      - description: 返回记录数量限制(默认20)
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Activity'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/controllers.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 获取最近活动记录
      tags:
      - 系统管理
  /admin/bangumi/{id}:
    delete:
      description: 根据ID删除指定的番剧（硬删除）
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "400":
          description: 无效的番剧ID
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: 番剧未找到
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 删除番剧
      tags:
      - 番剧管理
    put:
      consumes:
      - application/json
      description: 根据ID更新指定番剧的信息
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      - description: 番剧更新信息
        in: body
        name: bangumi
        required: true
        schema:
          $ref: '#/definitions/models.BangumiUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "400":
          description: 无效的请求参数
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: 番剧未找到
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 更新番剧信息
      tags:
      - 番剧管理
  /admin/beta/toggle:
    post:
      consumes:
      - application/json
      description: 开启或关闭系统的内测模式（仅管理员可用）
      parameters:
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 返回操作结果
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 权限不足
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: 切换内测模式状态
      tags:
      - 内测模式
  /admin/beta/user-access:
    post:
      consumes:
      - application/json
      description: 更新指定用户的内测版本访问权限（仅管理员可用）
      parameters:
      - description: 请求参数
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 返回操作结果
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 权限不足
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 用户不存在
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: 更新用户的内测访问权限
      tags:
      - 内测模式
  /admin/carousels:
    post:
      consumes:
      - multipart/form-data
      description: 创建新的轮播图记录
      parameters:
      - description: 轮播图标题
        in: formData
        name: title
        required: true
        type: string
      - description: 轮播图副标题
        in: formData
        name: subtitle
        type: string
      - description: 轮播图详细描述
        in: formData
        name: description
        type: string
      - description: 轮播图图片文件
        in: formData
        name: image_file
        required: true
        type: file
      - description: 轮播图点击跳转链接
        in: formData
        name: link
        type: string
      - description: 轮播图显示顺序
        in: formData
        name: order
        type: integer
      - description: 轮播图是否激活
        in: formData
        name: is_active
        type: boolean
      - description: 轮播图开始显示时间
        in: formData
        name: start_date
        type: string
      - description: 轮播图结束显示时间
        in: formData
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CarouselResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - Bearer: []
      summary: 创建新的轮播图
      tags:
      - carousel
  /admin/carousels/{id}:
    delete:
      description: 删除指定ID的轮播图
      parameters:
      - description: 轮播图ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SuccessResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - Bearer: []
      summary: 删除轮播图
      tags:
      - carousel
    get:
      description: 根据ID获取单个轮播图详情
      parameters:
      - description: 轮播图ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CarouselResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - Bearer: []
      summary: 获取单个轮播图
      tags:
      - carousel
    put:
      consumes:
      - multipart/form-data
      description: 更新指定ID的轮播图信息
      parameters:
      - description: 轮播图ID
        in: path
        name: id
        required: true
        type: integer
      - description: 轮播图标题
        in: formData
        name: title
        type: string
      - description: 轮播图副标题
        in: formData
        name: subtitle
        type: string
      - description: 轮播图详细描述
        in: formData
        name: description
        type: string
      - description: 轮播图图片文件
        in: formData
        name: image_file
        type: file
      - description: 轮播图点击跳转链接
        in: formData
        name: link
        type: string
      - description: 轮播图显示顺序
        in: formData
        name: order
        type: integer
      - description: 轮播图是否激活
        in: formData
        name: is_active
        type: boolean
      - description: 轮播图开始显示时间
        in: formData
        name: start_date
        type: string
      - description: 轮播图结束显示时间
        in: formData
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CarouselResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - Bearer: []
      summary: 更新轮播图
      tags:
      - carousel
  /admin/carousels/order:
    put:
      consumes:
      - application/json
      description: 批量更新轮播图的显示顺序
      parameters:
      - description: 轮播图顺序数组
        in: body
        name: orders
        required: true
        schema:
          items:
            $ref: '#/definitions/controllers.CarouselOrderRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - Bearer: []
      summary: 更新轮播图顺序
      tags:
      - carousel
  /admin/logs:
    get:
      consumes:
      - application/json
      description: 获取系统日志文件的最新内容
      parameters:
      - description: 返回的日志行数(默认100)
        in: query
        maximum: 1000
        minimum: 1
        name: lines
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LogResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.LogResponse'
      security:
      - Bearer: []
      summary: 获取系统日志
      tags:
      - 系统管理
  /admin/logs/watch:
    get:
      consumes:
      - application/json
      description: 通过WebSocket实时接收系统日志
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 实时监控系统日志
      tags:
      - 系统管理
  /admin/settings:
    get:
      description: 获取全局关键词、排除关键词和字幕组黑名单设置
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GlobalSettingsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取全局设置
      tags:
      - 全局设置
    put:
      consumes:
      - application/json
      description: 更新全局关键词、排除关键词和字幕组黑名单设置
      parameters:
      - description: 全局设置
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/controllers.GlobalSettingsUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GlobalSettingsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 更新全局设置
      tags:
      - 全局设置
  /admin/stats:
    get:
      description: 获取系统中的番剧、用户和RSS订阅源总数统计
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SystemStatsResponse'
      summary: 获取系统统计信息
      tags:
      - 系统管理
  /admin/system/status:
    get:
      description: 获取系统CPU、内存、磁盘和网络等实时状态信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SystemStatsResponse'
      summary: 获取系统状态信息
      tags:
      - 系统管理
  /admin/users:
    get:
      consumes:
      - application/json
      description: 获取系统中所有用户的信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 获取所有用户
      tags:
      - 用户管理
  /admin/users/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 通过用户ID获取特定用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 获取单个用户
      tags:
      - 用户管理
    put:
      consumes:
      - multipart/form-data
      description: 更新指定用户的信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户名
        in: formData
        name: username
        type: string
      - description: 密码
        in: formData
        name: password
        type: string
      - description: 邮箱
        in: formData
        name: email
        type: string
      - description: 角色
        in: formData
        name: role
        type: string
      - description: 是否允许访问
        in: formData
        name: is_allowed
        type: string
      - description: 头像文件
        in: formData
        name: avatar
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 更新用户信息
      tags:
      - 用户管理
  /bangumi:
    get:
      description: 获取系统中所有番剧列表，支持分页
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取所有番剧
      tags:
      - 番剧管理
  /bangumi/{id}:
    get:
      description: 通过ID获取特定番剧的详细信息
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取番剧详情
      tags:
      - 番剧管理
  /bangumi/{id}/favorite:
    post:
      description: 用户收藏或取消收藏指定ID的番剧
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "400":
          description: 无效的番剧ID
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "401":
          description: 用户未认证
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: 番剧未找到
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      security:
      - ApiKeyAuth: []
      summary: 收藏/取消收藏番剧
      tags:
      - 番剧统计
  /bangumi/{id}/group_episode:
    get:
      description: 获取指定番剧的特定字幕组的特定集数的详细信息
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      - description: 字幕组名称
        in: query
        name: group
        required: true
        type: string
      - description: 集数
        in: query
        name: episode
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取特定字幕组的特定集数信息
      tags:
      - 番剧管理
  /bangumi/{id}/rating:
    delete:
      description: 删除当前登录用户对指定ID番剧的评分
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除评分成功
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "400":
          description: 无效的番剧ID
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "401":
          description: 用户未认证
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: 未找到评分记录或番剧
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      security:
      - ApiKeyAuth: []
      summary: 删除用户对番剧的评分
      tags:
      - 番剧统计
    get:
      description: 获取当前登录用户对指定ID番剧的评分信息
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取评分成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.BangumiResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.BangumiRatingResponse'
              type: object
        "400":
          description: 无效的番剧ID
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "401":
          description: 用户未认证
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: 未找到评分记录或番剧
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取用户对番剧的评分
      tags:
      - 番剧统计
    post:
      consumes:
      - application/json
      description: 用户为指定ID的番剧添加或更新评分
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      - description: 评分信息
        in: body
        name: rating
        required: true
        schema:
          $ref: '#/definitions/models.BangumiRatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.BangumiResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.BangumiRatingResponse'
              type: object
        "400":
          description: 无效的请求参数或番剧ID
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "401":
          description: 用户未认证
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: 番剧未找到
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      security:
      - ApiKeyAuth: []
      summary: 添加或更新番剧评分
      tags:
      - 番剧统计
  /bangumi/{id}/rating_stats:
    get:
      description: 获取指定番剧的评分分布和详细统计信息
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取指定番剧的评分详情
      tags:
      - 番剧统计
  /bangumi/{id}/stats:
    get:
      description: 获取指定番剧的点击量、收藏量和评分统计信息
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取指定番剧的统计信息
      tags:
      - 番剧统计
  /bangumi/{id}/view:
    post:
      description: 为指定ID的番剧增加一次点击量
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 点击量增加成功
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "400":
          description: 无效的番剧ID
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: 番剧未找到
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 增加番剧点击量
      tags:
      - 番剧统计
  /bangumi/grouped_items/{id}:
    get:
      description: 获取指定番剧ID的所有RSS条目，并按字幕组、分辨率、字幕类型分类。
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取分组RSS条目
          schema:
            allOf:
            - $ref: '#/definitions/controllers.BangumiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controllers.GroupedByResolutionAndSub'
                  type: array
              type: object
        "404":
          description: 番剧未找到
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取按字幕组、分辨率、字幕类型分类的番剧RSS条目
      tags:
      - 番剧管理
  /bangumi/items/{id}:
    get:
      description: 通过番剧ID获取相关的RSS条目，支持字幕组和来源筛选，以及集数范围筛选
      parameters:
      - description: 番剧ID
        in: path
        name: id
        required: true
        type: integer
      - description: 字幕组
        in: query
        name: group
        type: string
      - description: 来源
        in: query
        name: source
        type: string
      - description: 最小集数
        in: query
        name: min_ep
        type: number
      - description: 最大集数
        in: query
        name: max_ep
        type: number
      - description: 特定集数
        in: query
        name: episode
        type: number
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取番剧关联的RSS条目
      tags:
      - 番剧管理
  /bangumi/search:
    get:
      description: 根据条件搜索番剧
      parameters:
      - description: 标题关键词
        in: query
        name: title
        type: string
      - description: 年份
        in: query
        name: year
        type: string
      - description: 季度
        in: query
        name: season
        type: integer
      - description: 来源
        in: query
        name: source
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 搜索番剧
      tags:
      - 番剧管理
  /bangumi/stats:
    get:
      description: 获取系统中番剧的统计信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取番剧统计信息
      tags:
      - 番剧管理
  /bangumi/stats/favorites:
    get:
      description: 获取番剧的收藏量统计信息
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取番剧收藏量统计
      tags:
      - 番剧统计
  /bangumi/stats/rankings:
    get:
      description: 获取番剧的综合排名（基于点击量、收藏量和评分的加权计算）
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取番剧综合排名
      tags:
      - 番剧统计
  /bangumi/stats/ratings:
    get:
      description: 获取番剧的评分统计信息
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取番剧评分统计
      tags:
      - 番剧统计
  /bangumi/stats/views:
    get:
      description: 获取番剧的点击量统计信息
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取番剧点击量统计
      tags:
      - 番剧统计
  /bangumi/year/{year}:
    get:
      description: 获取指定年份的所有番剧，支持分页
      parameters:
      - description: 年份
        in: path
        name: year
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 根据年份获取番剧列表
      tags:
      - 番剧管理
  /bangumi/years:
    get:
      description: 获取数据库中所有番剧的年份列表，按年份降序排列
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      summary: 获取所有番剧年份
      tags:
      - 番剧管理
  /beta/status:
    get:
      consumes:
      - application/json
      description: 获取当前系统的内测模式状态
      produces:
      - application/json
      responses:
        "200":
          description: 返回内测模式状态
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: 获取内测模式状态
      tags:
      - 内测模式
  /carousels:
    get:
      description: 获取所有轮播图列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CarouselResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取所有轮播图
      tags:
      - carousel
  /history/{id}/play_history:
    delete:
      consumes:
      - application/json
      description: 软删除 需要编写定时器清理过期的记录和已经被删除的记录
      parameters:
      - description: historyId
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      security:
      - Bearer: []
      summary: 删除观看历史记录
      tags:
      - 播放记录
  /history/play_history:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户观看历史记录
      parameters:
      - description: 页码，默认1
        in: query
        name: page
        type: integer
      - description: 每页数量，默认10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 获取用户观看历史记录
      tags:
      - 播放记录
    post:
      consumes:
      - application/json
      description: 点击立即播放的时候记录,如果历史记录已存在则更新上次播放时间
      parameters:
      - description: 历史记录请求信息
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.HistoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BangumiResponse'
      security:
      - Bearer: []
      summary: 增加或更新观看历史记录
      tags:
      - 播放记录
  /login:
    post:
      consumes:
      - application/json
      description: 用户登录并获取token
      parameters:
      - description: 登录信息
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
      summary: 用户登录
      tags:
      - 认证
  /register:
    post:
      consumes:
      - multipart/form-data
      description: 注册新用户
      parameters:
      - description: 用户名
        in: formData
        name: username
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      - description: 邮箱
        in: formData
        name: email
        required: true
        type: string
      - description: 角色
        in: formData
        name: role
        type: string
      - description: 头像文件
        in: formData
        name: avatar
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.Response'
      summary: 用户注册
      tags:
      - 认证
  /rss_feeds:
    get:
      description: 获取系统中所有已配置的RSS订阅源列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.RSSResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.RSSFeedResponse'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
      summary: 获取所有RSS订阅源
      tags:
      - RSS订阅源管理
    post:
      consumes:
      - application/json
      description: 创建新的RSS订阅源
      parameters:
      - description: RSS订阅源信息
        in: body
        name: feed
        required: true
        schema:
          $ref: '#/definitions/models.RSSFeedRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controllers.RSSResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.RSSFeedResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
      summary: 创建RSS订阅源
      tags:
      - RSS订阅源管理
  /rss_feeds/{id}:
    delete:
      description: 删除指定ID的RSS订阅源
      parameters:
      - description: RSS订阅源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
      summary: 删除RSS订阅源
      tags:
      - RSS订阅源管理
    get:
      description: 根据ID获取特定的RSS订阅源详细信息
      parameters:
      - description: RSS订阅源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.RSSResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.RSSFeedResponse'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
      summary: 获取单个RSS订阅源
      tags:
      - RSS订阅源管理
    put:
      consumes:
      - application/json
      description: 更新指定ID的RSS订阅源信息
      parameters:
      - description: RSS订阅源ID
        in: path
        name: id
        required: true
        type: integer
      - description: RSS订阅源信息
        in: body
        name: feed
        required: true
        schema:
          $ref: '#/definitions/models.RSSFeedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.RSSResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.RSSFeedResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
      summary: 更新RSS订阅源
      tags:
      - RSS订阅源管理
  /rss_feeds/{id}/update:
    post:
      description: 手动触发指定ID的RSS订阅源的更新任务
      parameters:
      - description: RSS订阅源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
      summary: 手动更新指定RSS订阅
      tags:
      - RSS订阅源管理
  /rss_feeds/update:
    post:
      description: 手动触发RSS订阅源的更新任务，立即返回并在后台执行更新
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.RSSResponse'
      summary: 手动更新所有RSS订阅
      tags:
      - RSS订阅源管理
  /user/favorites:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户收藏的所有番剧
      parameters:
      - description: 页码，默认1
        in: query
        name: page
        type: integer
      - description: 每页数量，默认10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 获取用户收藏的番剧列表
      tags:
      - 番剧
  /user/info:
    get:
      consumes:
      - application/json
      description: 使用token获取当前登录用户的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 获取当前用户信息
      tags:
      - 用户
    put:
      consumes:
      - multipart/form-data
      description: 更新当前登录用户的基本信息（邮箱、头像和密码）
      parameters:
      - description: 邮箱
        in: formData
        name: email
        type: string
      - description: 头像文件
        in: formData
        name: avatar
        type: file
      - description: 旧密码
        in: formData
        name: old_password
        type: string
      - description: 新密码
        in: formData
        name: new_password
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 更新当前用户信息
      tags:
      - 用户
  /user/password:
    put:
      consumes:
      - application/json
      description: 修改当前登录用户的密码
      parameters:
      - description: 密码更新信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - Bearer: []
      summary: 修改密码
      tags:
      - 用户
securityDefinitions:
  Bearer:
    description: 请在此输入 Bearer token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
